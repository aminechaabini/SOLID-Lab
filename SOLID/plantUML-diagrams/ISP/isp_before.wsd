@startuml

interface Door {
    + lock(): void
    + unlock(): void
    + open(): void
    + close(): void
    + timeOutCallback(): void
    + proximityCallback(): void
}

class SensingDoor {
    - _locked: boolean
    - _opened: boolean
    + SensingDoor(sensor: Sensor)
    + lock(): void
    + unlock(): void
    + open(): void
    + close(): void
    + timeOutCallback(): void
    + proximityCallback(): void
}

class Sensor {
    + register(door: Door): void
    - isPersonClose(): boolean
}

class TimedDoor {
    - TIME_OUT: int
    - _locked: boolean
    - _opened: boolean
    + TimedDoor(timer: Timer)
    + lock(): void
    + unlock(): void
    + open(): void
    + close(): void
    + timeOutCallback(): void
    + proximityCallback(): void
}

class Timer {
    + register(timeOut: long, door: Door): void
}

Door <|.. SensingDoor
Door <|.. TimedDoor
Sensor ..> Door
Timer ..> Door
SensingDoor ..> Sensor
TimedDoor ..> Timer

@enduml
